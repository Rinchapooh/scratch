# syntax=docker/dockerfile:1



FROM php:8.2-fpm-alpine

RUN apk add --no-cache  $PHPIZE_DEPS
RUN  apk add --update linux-headers
RUN pecl install xdebug
RUN  docker-php-ext-enable xdebug

RUN mkdir -p /var/log/xdebug
RUN touch /var/log/xdebug/xdb.log

















#################################################################################
#FROM php:8.1.17-apache
#
## Copy app files from the app directory.
#COPY ./ /var/www/html
#
## Your PHP application may require additional PHP extensions to be installed
## manually. For detailed instructions for installing extensions can be found, see
## https://github.com/docker-library/docs/tree/master/php#how-to-install-more-php-extensions
#
#
## Add core PHP extensions, see
## https://github.com/docker-library/docs/tree/master/php#php-core-extensions
## This example adds the apt packages for the 'gd' extension's dependencies and then
## installs the 'gd' extension. For additional tips on running apt-get:
## https://docs.docker.com/go/dockerfile-aptget-best-practices/
#RUN apt-get update && apt-get install -y \
#     libfreetype-dev \
#     libjpeg62-turbo-dev \
#     libpng-dev \
# && rm -rf /var/lib/apt/lists/* \
#     && docker-php-ext-configure gd --with-freetype --with-jpeg \
#     && docker-php-ext-install -j$(nproc) gd
#
## Add PECL extensions, see
# RUN  pecl install xdebug-3.2.1 \
#    && docker-php-ext-enable  xdebug
#
## Use the default production configuration for PHP runtime arguments, see
## https://github.com/docker-library/docs/tree/master/php#configuration
##RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
#
## Switch to a non-privileged user (defined in the base image) that the app will run under.
## See https://docs.docker.com/go/dockerfile-user-best-practices/
#USER www-data
